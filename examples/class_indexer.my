//This file demonstrate class indexers
//////////////////////////////////////////////////////////////////////////////////
//                                       First
//////////////////////////////////////////////////////////////////////////////////
//class IndexedNames
//{
//    let namelist = []
//    let size = 10
//    fn init()
//    {
//        let i = 0
//        for (i = 0; i < size; i++)
//        {
//            namelist[i] = "N. A."
//        }
//    }
//
//    fn getNameList() {
//        println(namelist)
//    }
//
//    property this[index]
//    {
//        get
//        {
//            let tmp;
//            if ( index >= 0 && index <= size - 1 )
//            {
//               tmp = namelist[index]
//            }
//            else
//            {
//               tmp = ""
//            }
//     
//            return tmp
//         }
//         set
//         {
//             if ( index >= 0 && index <= size-1 )
//             {
//                 namelist[index] = value
//             }
//         }
//    }
//}
//
//fn Main()
//{
//    namesObj = new IndexedNames()
//
//    //Calling Indexer's set function
//    namesObj[0] = "Zara"
//    namesObj[1] = "Riz"
//    namesObj[2] = "Nuha"
//    namesObj[3] = "Asif"
//    namesObj[4] = "Davinder"
//    namesObj[5] = "Sunil"
//    namesObj[6] = "Rubic"
//
//    namesObj.getNameList()
//
//    for (i = 0; i < namesObj.size; i++)
//    {
//        println(namesObj[i]) //Calling Indexer's get function
//    }
//}
//
//Main()


//////////////////////////////////////////////////////////////////////////////////
//                                       Second
//////////////////////////////////////////////////////////////////////////////////
class CourseScore
{
    let name;
    let courseID;
    let score;

    fn init(name, courseID, score)
    {  
        this.name = name;
        this.courseID = courseID;
        this.score = score;
    }

    property Name
    {
        get { return name; }
        set { name = value; }
    }

    property CourseID
    {
        get { return courseID; }
        set { courseID = value; }
    }

    property Score
    {
        get { return score; }
        set { score = value; }
    }
}

class CourseScoreIndexer
{
    let arrCourseScore = [];

    property this[name, courseID]
    {
        get
        {
            for cs in arrCourseScore
            {
                if (cs.Name == name && cs.CourseID == courseID) {
                    return cs.Score;
                }
            }
            return -1;
        }
        set
        {
            arrCourseScore.push(new CourseScore(name, courseID, value));
        }
    }

    property this[name]
    {
        get
        {
            let tempArray = [];
            for cs in arrCourseScore
            {
                if (cs.Name == name) {
                    tempArray.push(cs);
                }
            }
            return tempArray;
        }
    }
}

class Test
{  
    static fn Main()
    {
        let csi = new CourseScoreIndexer();
        csi["Mike", 1] = 90;
        csi["Mike", 2] = 70;
        csi["Mike", 3] = 85;
        csi["Vicky", 1] = 80;

        println(csi["Mike", 2]); //output : 70
        println("\n<<<<<<<<Mike's all course>>>>>>>>");

        let tempArray = []
        tempArray = csi["Mike"];
        for cs in tempArray
        {
            printf("Name: %v,   CourseID: %v,   Score: %v\n", cs.Name, cs.CourseID, cs.Score);
        }
    }
}

Test.Main()
